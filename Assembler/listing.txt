Line     Addres   Text                         Code

0000      0000    call :hentai                 31    06
0001      0005    hlt                          00
0002      0006    hentai:                      06
0003      0006    push 0                       33    00
0004      0011    pop [0]                      162    00
0005      0016    in                           09
0006      0017    pop [0]                      162    00
0007      0022    push 0                       33    00
0008      0027    pop [1]                      162    01
0009      0032    in                           09
0010      0033    pop [1]                      162    01
0011      0038    push 0                       33    00
0012      0043    pop [2]                      162    02
0013      0048    in                           09
0014      0049    pop [2]                      162    02
0015      0054    push [0]                     161    00
0016      0059    push 0                       33    00
0017      0064    je :if_1                     26    74
0018      0069    jump :if_not_1               21    94
0019      0074    if_1:                        74
0020      0074    push [1]                     161    01
0021      0079    push [2]                     161    02
0022      0084    call :Linear                 31    120
0023      0089    jump :end_if_1               21    114
0024      0094    if_not_1:                    94
0025      0094    else_1:                      94
0026      0094    push [0]                     161    00
0027      0099    push [1]                     161    01
0028      0104    push [2]                     161    02
0029      0109    call :Kvadrupl               31    165
0030      0114    end_if_1:                    114
0031      0114    ret                          30
0032      0115    jump :jump_over_Linear       21    160
0033      0120    Linear:                      120
0034      0120    pop [4]                      162    04
0035      0125    pop [3]                      162    03
0036      0130    push 1                       33    01
0037      0135    minus                        08
0038      0136    push [4]                     161    04
0039      0141    mul                          05
0040      0142    push [3]                     161    03
0041      0147    div                          06
0042      0148    pop [5]                      162    05
0043      0153    push [5]                     161    05
0044      0158    out                          10
0045      0159    ret                          30
0046      0160    jump_over_Linear:            160
0047      0160    jump :jump_over_Kvadrupl     21    411
0048      0165    Kvadrupl:                    165
0049      0165    pop [8]                      162    08
0050      0170    pop [7]                      162    07
0051      0175    pop [6]                      162    06
0052      0180    push [7]                     161    07
0053      0185    push [7]                     161    07
0054      0190    mul                          05
0055      0191    push 4                       33    04
0056      0196    push [6]                     161    06
0057      0201    mul                          05
0058      0202    push [8]                     161    08
0059      0207    mul                          05
0060      0208    sub                          04
0061      0209    pop [9]                      162    09
0062      0214    push [9]                     161    09
0063      0219    push 0                       33    00
0064      0224    jb :if_2                     22    234
0065      0229    jump :if_not_2               21    245
0066      0234    if_2:                        234
0067      0234    push 0                       33    00
0068      0239    ret                          30
0069      0240    jump :end_if_2               21    410
0070      0245    if_not_2:                    245
0071      0245    push [9]                     161    09
0072      0250    push 0                       33    00
0073      0255    je :elif_1                   26    265
0074      0260    jump :elif_not_1             21    311
0075      0265    elif_1:                      265
0076      0265    push 1                       33    01
0077      0270    minus                        08
0078      0271    push [7]                     161    07
0079      0276    mul                          05
0080      0277    push 2                       33    02
0081      0282    div                          06
0082      0283    push [6]                     161    06
0083      0288    div                          06
0084      0289    pop [10]                     162    10
0085      0294    push [10]                    161    10
0086      0299    out                          10
0087      0300    push 1                       33    01
0088      0305    ret                          30
0089      0306    jump :end_elif_1             21    410
0090      0311    elif_not_1:                  311
0091      0311    else_2:                      311
0092      0311    push [9]                     161    09
0093      0316    sqrt                         07
0094      0317    pop [9]                      162    09
0095      0322    push 1                       33    01
0096      0327    minus                        08
0097      0328    push [7]                     161    07
0098      0333    mul                          05
0099      0334    push [9]                     161    09
0100      0339    add                          03
0101      0340    push 2                       33    02
0102      0345    div                          06
0103      0346    push [6]                     161    06
0104      0351    div                          06
0105      0352    pop [11]                     162    11
0106      0357    push 1                       33    01
0107      0362    minus                        08
0108      0363    push [7]                     161    07
0109      0368    mul                          05
0110      0369    push [9]                     161    09
0111      0374    sub                          04
0112      0375    push 2                       33    02
0113      0380    div                          06
0114      0381    push [6]                     161    06
0115      0386    div                          06
0116      0387    pop [12]                     162    12
0117      0392    push [11]                    161    11
0118      0397    out                          10
0119      0398    push [12]                    161    12
0120      0403    out                          10
0121      0404    push 2                       33    02
0122      0409    ret                          30
0123      0410    end_elif_1:                  410
0124      0410    end_if_2:                    410
0125      0410    ret                          30
0126      0411    jump_over_Kvadrupl:          411
0127      0411                          